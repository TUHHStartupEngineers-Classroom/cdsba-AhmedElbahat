[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website every time before you want to upload changes."
  },
  {
    "objectID": "content/01_journal/02_statistics.html",
    "href": "content/01_journal/02_statistics.html",
    "title": "MyLabJournal",
    "section": "",
    "text": "random_vars &lt;- readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/random_vars.rds\")\nage_mean &lt;- mean(random_vars[1:1000,\"age\"])\nIncome_mean &lt;- mean(random_vars[1:1000,\"income\"])\nprint(paste(\"Expected value of age and income=:\",age_mean,\"and the income is:\", Income_mean))\n\n#&gt; [1] \"Expected value of age and income=: 33.471 and the income is: 3510.731\"\n\n\n\nage_var &lt;- var(random_vars[1:1000,\"age\"])\nincome_var &lt;- var(random_vars[1:1000,\"income\"])\nprint(paste(\"Variance of age and=:\",age_var,\"and the income variance is:\", income_var))\n\n#&gt; [1] \"Variance of age and=: 340.607766766767 and the income variance is: 8625645.84448348\"\n\n\n\nage_sd &lt;- sd(random_vars[1:1000,\"age\"])\nincome_sd &lt;- sd(random_vars[1:1000,\"income\"])\nprint(paste(\"standard deviation of age and=:\",age_var,\"and the income standard deviation is:\", income_var))\n\n#&gt; [1] \"standard deviation of age and=: 340.607766766767 and the income standard deviation is: 8625645.84448348\"\n\nprint(paste(\"I think that it does not make sense to compare between age that barely exceed 100 and the incomes that the values are thounds and also the variables are completely different so they can not be compared\"))\n\n#&gt; [1] \"I think that it does not make sense to compare between age that barely exceed 100 and the incomes that the values are thounds and also the variables are completely different so they can not be compared\"\n\n\n\ncor_age_income &lt;- cor(random_vars[1:1000,\"age\"], random_vars[1:1000,\"income\"])\ncov_age_income&lt;- cov(random_vars[1:1000,\"age\"],random_vars[1:1000,\"income\"])\nprint(paste(\"correlation is \", cor_age_income,\"and the covariance is:\", cov_age_income))\n\n#&gt; [1] \"correlation is  0.547943162326477 and the covariance is: 29700.1468458458\"\n\n\n\nprint(paste(\"4) The correlation is eassier to interrupt as the correlation is standardized measure and the value that we got is between 1 and -1. It is not the best result as it is not near either values. So it does not have the strongest linear relation and also the direction is know as it starts from the number that I got and go the positive x axis.\"))\n\n#&gt; [1] \"4) The correlation is eassier to interrupt as the correlation is standardized measure and the value that we got is between 1 and -1. It is not the best result as it is not near either values. So it does not have the strongest linear relation and also the direction is know as it starts from the number that I got and go the positive x axis.\"\n\n\n\nlibrary(dplyr)\n\n#&gt; \n#&gt; Attache Paket: 'dplyr'\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:stats':\n#&gt; \n#&gt;     filter, lag\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:base':\n#&gt; \n#&gt;     intersect, setdiff, setequal, union\n\nage_less_equal_18 &lt;- random_vars %&gt;%\n  filter(age &lt;= 18)\nincome_until_18 &lt;- mean(age_less_equal_18$income)\ncat(\"Expected income at age less and equa to 18 =\", income_until_18)\n\n#&gt; Expected income at age less and equa to 18 = 389.6074\n\n\n\nage_moreThan_18_to_65 &lt;- random_vars %&gt;%\n  filter(age&gt;=18 & age&lt;=65)\nincomeFrom_18_65 &lt;- mean(age_moreThan_18_to_65$income)\ncat(\"Expected income at age less and equa to 18 =\",incomeFrom_18_65)\n\n#&gt; Expected income at age less and equa to 18 = 4691.378\n\n\n\nage_equal_65 &lt;- random_vars %&gt;%\n  filter(age&gt;=65)\nincomeFrom_65 &lt;- mean(age_equal_65$income)\ncat(\"Expected income at age less and equa to 18 =\",incomeFrom_65)\n\n#&gt; Expected income at age less and equa to 18 = 1777.237"
  },
  {
    "objectID": "content/01_journal/04_causality.html",
    "href": "content/01_journal/04_causality.html",
    "title": "Causality",
    "section": "",
    "text": "# Load necessary library\nlibrary(ggplot2)\n\n# Create a sample dataset (you can use any built-in dataset or import your own)\ndata &lt;- read.csv(\"C:/Users/ahmed/OneDrive/Dokumente/archive/divorce_margarine.csv\")\n\n# Print the dataset\nprint(data)\n\n#&gt;    year divorce_rate margarine_consumption\n#&gt; 1  2000          5.0                   8.2\n#&gt; 2  2001          4.7                   7.0\n#&gt; 3  2002          4.6                   6.5\n#&gt; 4  2003          4.4                   5.3\n#&gt; 5  2004          4.3                   5.2\n#&gt; 6  2005          4.1                   4.0\n#&gt; 7  2006          4.2                   4.6\n#&gt; 8  2007          4.2                   4.5\n#&gt; 9  2008          4.2                   4.2\n#&gt; 10 2009          4.1                   3.7\n\n# Plot the dataset using ggplot2\nggplot(data, aes(x =divorce_rate , y = margarine_consumption)) +\n  geom_quantile(stat = \"identity\", fill = \"red\") +\n  labs(title = \"Sample Bar Plot\", x = \"divorce_rate\", y = \"margarine_consumption\")\n\n#&gt; Warning in geom_quantile(stat = \"identity\", fill = \"red\"): Ignoring unknown\n#&gt; parameters: `fill`"
  },
  {
    "objectID": "content/01_journal/09_iv.html",
    "href": "content/01_journal/09_iv.html",
    "title": "Instrumental Variables",
    "section": "",
    "text": "newFeature &lt;-readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/rand_enc.rds\")\n\n\nlibrary(\"dagitty\")\nlibrary(\"ggdag\")\n\n#&gt; \n#&gt; Attaching package: 'ggdag'\n\n\n#&gt; The following object is masked from 'package:stats':\n#&gt; \n#&gt;     filter\n\nlibrary(\"ggplot2\")\n\n\n# Instrumental Variable Estimation - Application\niv_expl &lt;- dagify(\n  Y ~ D,\n  Y ~ U,\n  D ~ U,\n  D ~ Z,\n  exposure = \"D\",\n  latent = \"U\",\n  outcome = \"Y\",\n  coords = list(x = c(U = 1, D = 0, Y = 2, Z = -1),\n                y = c(U = 1, D = 0, Y = 0, Z = 0)),\n  labels = c(\"D\" = \"Used_ftr\", \n             \"Y\" = \"time_spent\", \n             \"U\" = \"Willingness\",\n             \"Z\" = \"Rand_Enc\")\n)\nggdag(iv_expl, text = T) +\n  guides(color = \"none\") +\n  geom_dag_text(color = \"white\") +\n  geom_dag_edges(edge_color = \"white\") +\n  geom_dag_label_repel(aes(label = label))\n\n\n\n\n\n\n\n\n\nmodel_naive_biased &lt;- lm(time_spent ~ used_ftr, data = newFeature)\n\nsummary(model_naive_biased)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = time_spent ~ used_ftr, data = newFeature)\n#&gt; \n#&gt; Residuals:\n#&gt;      Min       1Q   Median       3Q      Max \n#&gt; -20.4950  -3.5393   0.0158   3.5961  20.5051 \n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept) 18.86993    0.06955   271.3   &lt;2e-16 ***\n#&gt; used_ftr    10.82269    0.10888    99.4   &lt;2e-16 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 5.351 on 9998 degrees of freedom\n#&gt; Multiple R-squared:  0.497,  Adjusted R-squared:  0.497 \n#&gt; F-statistic:  9881 on 1 and 9998 DF,  p-value: &lt; 2.2e-16\n\n\n\ncor(newFeature) %&gt;% round(2)\n\n#&gt;            rand_enc used_ftr time_spent\n#&gt; rand_enc       1.00     0.20       0.13\n#&gt; used_ftr       0.20     1.00       0.71\n#&gt; time_spent     0.13     0.71       1.00\n\ncat(\" There is a positive correaltion between rand_enc and used_ftr and used_ftr has a big influence on time_spent so our IV is very importnat in this application.\")\n\n#&gt;  There is a positive correaltion between rand_enc and used_ftr and used_ftr has a big influence on time_spent so our IV is very importnat in this application.\n\n\n\nlibrary(\"estimatr\")\nmodel_iv &lt;- iv_robust(time_spent ~ used_ftr | rand_enc, data = newFeature)\nsummary(model_iv)\n\n#&gt; \n#&gt; Call:\n#&gt; iv_robust(formula = time_spent ~ used_ftr | rand_enc, data = newFeature)\n#&gt; \n#&gt; Standard error type:  HC2 \n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error t value  Pr(&gt;|t|) CI Lower CI Upper   DF\n#&gt; (Intercept)   19.312     0.2248   85.89 0.000e+00   18.872    19.75 9998\n#&gt; used_ftr       9.738     0.5353   18.19 8.716e-73    8.689    10.79 9998\n#&gt; \n#&gt; Multiple R-squared:  0.4921 ,    Adjusted R-squared:  0.492 \n#&gt; F-statistic:   331 on 1 and 9998 DF,  p-value: &lt; 2.2e-16\n\ncat(\"The estimate is biased and it is upward biased\")\n\n#&gt; The estimate is biased and it is upward biased"
  },
  {
    "objectID": "content/01_journal/07_matching.html",
    "href": "content/01_journal/07_matching.html",
    "title": "Matching and Subclassification",
    "section": "",
    "text": "membership &lt;-readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/membership.rds\")\n\n\n# Load packages\nlibrary(dagitty)\nlibrary(ggdag)\n\n#&gt; \n#&gt; Attaching package: 'ggdag'\n\n\n#&gt; The following object is masked from 'package:stats':\n#&gt; \n#&gt;     filter\n\nlibrary(ggplot2)\n\n# Define DAG\ndag_model &lt;- 'dag {\n  bb=\"0,0,1,1\"\n  \"Age\" [exposure,pos=\"0.25,0.2\"]\n  \"Membership\" [pos=\"0.35,0.25\"]\n  \"avg_purchase\" [outcome,pos=\"0.35,0.2\"]\n  card [pos=\"0.25,0.25\"]\n  \"Membership\" -&gt; \"Age\"\n  \"Membership\" -&gt; \"avg_purchase\"\n  card -&gt; \"Age\"\n  card -&gt; \"Membership\"\n  card -&gt; \"avg_purchase\"\n}'\n\n# DAG with adjustment sets (and custom layout)\nggdag_adjustment_set(dag_model, shadow = T, text = F) +\n  guides(color = \"none\") +  # Turn off legend\n  geom_dag_text(color = NA) +\n  geom_dag_edges(edge_color = \"white\") +\n  geom_dag_label_repel(aes(label = name))\n\n\n\n\n\n\n\n\n\nmodel_naive &lt;- lm(avg_purch ~ card, data = membership)\nsummary(model_naive)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = avg_purch ~ card, data = membership)\n#&gt; \n#&gt; Residuals:\n#&gt;      Min       1Q   Median       3Q      Max \n#&gt; -101.515  -20.684   -0.199   20.424  120.166 \n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)  65.9397     0.3965  166.29   &lt;2e-16 ***\n#&gt; card         25.2195     0.6095   41.38   &lt;2e-16 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 30.11 on 9998 degrees of freedom\n#&gt; Multiple R-squared:  0.1462, Adjusted R-squared:  0.1461 \n#&gt; F-statistic:  1712 on 1 and 9998 DF,  p-value: &lt; 2.2e-16\n\n\n\nlibrary(MatchIt)\ncem &lt;- matchit(card ~ avg_purch, data = membership, method = 'cem', estimand = 'ATE')\nsummary(cem)\n\n#&gt; \n#&gt; Call:\n#&gt; matchit(formula = card ~ avg_purch, data = membership, method = \"cem\", \n#&gt;     estimand = \"ATE\")\n#&gt; \n#&gt; Summary of Balance for All Data:\n#&gt;           Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#&gt; avg_purch       91.1592       65.9397          0.8356      1.059    0.2225\n#&gt;           eCDF Max\n#&gt; avg_purch   0.3281\n#&gt; \n#&gt; Summary of Balance for Matched Data:\n#&gt;           Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#&gt; avg_purch       76.9367       76.5309          0.0134     1.0123     0.005\n#&gt;           eCDF Max Std. Pair Dist.\n#&gt; avg_purch   0.0149           0.162\n#&gt; \n#&gt; Sample Sizes:\n#&gt;               Control Treated\n#&gt; All           5768.   4232.  \n#&gt; Matched (ESS) 4802.01 3224.93\n#&gt; Matched       5755.   4232.  \n#&gt; Unmatched       13.      0.  \n#&gt; Discarded        0.      0.\n\n\n\nnn &lt;- matchit(card ~ avg_purch, data = membership, method = \"nearest\",  distance = \"mahalanobis\", replace = T)\nsummary(nn)\n\n#&gt; \n#&gt; Call:\n#&gt; matchit(formula = card ~ avg_purch, data = membership, method = \"nearest\", \n#&gt;     distance = \"mahalanobis\", replace = T)\n#&gt; \n#&gt; Summary of Balance for All Data:\n#&gt;           Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#&gt; avg_purch       91.1592       65.9397          0.8239      1.059    0.2225\n#&gt;           eCDF Max\n#&gt; avg_purch   0.3281\n#&gt; \n#&gt; Summary of Balance for Matched Data:\n#&gt;           Means Treated Means Control Std. Mean Diff. Var. Ratio eCDF Mean\n#&gt; avg_purch       91.1592        91.147          0.0004     1.0015    0.0002\n#&gt;           eCDF Max Std. Pair Dist.\n#&gt; avg_purch   0.0043           0.002\n#&gt; \n#&gt; Sample Sizes:\n#&gt;               Control Treated\n#&gt; All           5768.      4232\n#&gt; Matched (ESS) 1308.81    4232\n#&gt; Matched       2280.      4232\n#&gt; Unmatched     3488.         0\n#&gt; Discarded        0.         0\n\n\n\nlogistic_inv &lt;- glm(card ~ avg_purch, data = membership, family = binomial(link= \"logit\"))\nsummary(logistic_inv)\n\n#&gt; \n#&gt; Call:\n#&gt; glm(formula = card ~ avg_purch, family = binomial(link = \"logit\"), \n#&gt;     data = membership)\n#&gt; \n#&gt; Coefficients:\n#&gt;               Estimate Std. Error z value Pr(&gt;|z|)    \n#&gt; (Intercept) -2.4756111  0.0657123  -37.67   &lt;2e-16 ***\n#&gt; avg_purch    0.0276060  0.0007759   35.58   &lt;2e-16 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; (Dispersion parameter for binomial family taken to be 1)\n#&gt; \n#&gt;     Null deviance: 13626  on 9999  degrees of freedom\n#&gt; Residual deviance: 12054  on 9998  degrees of freedom\n#&gt; AIC: 12058\n#&gt; \n#&gt; Number of Fisher Scoring iterations: 3\n\n\n\nlibrary(dplyr)\n\n#&gt; \n#&gt; Attaching package: 'dplyr'\n\n\n#&gt; The following objects are masked from 'package:stats':\n#&gt; \n#&gt;     filter, lag\n\n\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     intersect, setdiff, setequal, union\n\ndf_aug &lt;- membership %&gt;%\nmutate(propensity = predict(logistic_inv, type = \"response\"))\n\n# Extend data by IPW scores\ndf_ipw &lt;- df_aug %&gt;% mutate(\n  ipw = (card/propensity) + ((1-card) / (1-propensity)))\n\n# Look at data with IPW scores\ndf_ipw %&gt;% \n  select(card, avg_purch, propensity, ipw)\n\n\n\n  \n\n\nggplot(df_aug, aes(x = propensity)) +\n  geom_histogram(alpha = .8, color = \"white\")\n\n#&gt; `stat_bin()` using `bins = 30`. Pick better value with `binwidth`."
  },
  {
    "objectID": "content/01_journal/05_dag.html",
    "href": "content/01_journal/05_dag.html",
    "title": "Directed Acyclic Graphs",
    "section": "",
    "text": "library(\"dagitty\")\nlibrary(\"ggdag\")\n\n#&gt; \n#&gt; Attache Paket: 'ggdag'\n\n\n#&gt; Das folgende Objekt ist maskiert 'package:stats':\n#&gt; \n#&gt;     filter\n\n# Collider\ncollider &lt;- dagify(\n  P ~ S_AB,\n  P ~ S_CD,\n  coords = list(x = c(S_CD = 3, P = 2, S_AB =1),               y = c(S_CD = 1, P = 0,S_AB = 1)))\n\n# Plot DAG\nggdag(collider) \n\n\n\n\n\n\n\n\n\n customers &lt;- readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/customer_sat.rds\")\n\nlm_customer &lt;- lm(satisfaction ~ follow_ups , data= customers)\nsummary(lm_customer)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = satisfaction ~ follow_ups, data = customers)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -12.412  -5.257   1.733   4.506  12.588 \n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)  78.8860     4.2717  18.467 1.04e-10 ***\n#&gt; follow_ups   -3.3093     0.6618  -5.001 0.000243 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 7.923 on 13 degrees of freedom\n#&gt; Multiple R-squared:  0.658,  Adjusted R-squared:  0.6316 \n#&gt; F-statistic: 25.01 on 1 and 13 DF,  p-value: 0.0002427\n\n\n\nlm_customer_subscription &lt;- lm(satisfaction ~ follow_ups + subscription , data= customers)\nsummary(lm_customer_subscription)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = satisfaction ~ follow_ups + subscription, data = customers)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -4.3222 -2.1972  0.3167  2.2667  3.9944 \n#&gt; \n#&gt; Coefficients:\n#&gt;                      Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)           26.7667     6.6804   4.007  0.00206 ** \n#&gt; follow_ups             2.1944     0.7795   2.815  0.01682 *  \n#&gt; subscriptionPremium   44.7222     5.6213   7.956 6.88e-06 ***\n#&gt; subscriptionPremium+  18.0722     2.1659   8.344 4.37e-06 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2.958 on 11 degrees of freedom\n#&gt; Multiple R-squared:  0.9597, Adjusted R-squared:  0.9487 \n#&gt; F-statistic: 87.21 on 3 and 11 DF,  p-value: 5.956e-08\n\n\n\ncat(\"The realtion between satisfaction with the follow_ups for the accounts that have a subscription is more realted as the adjusted R in there is 0.9 and the Pvalue with the follow up with account to subscription is lower and the estimate has changed from -3.3093 to 2.1944  in the follow up.\")\n\n#&gt; The realtion between satisfaction with the follow_ups for the accounts that have a subscription is more realted as the adjusted R in there is 0.9 and the Pvalue with the follow up with account to subscription is lower and the estimate has changed from -3.3093 to 2.1944  in the follow up.\n\n\n\nlibrary(ggplot2)\n\n# Not conditioning on student\nberk_not_cond &lt;- ggplot(customers, aes(x = follow_ups, y = satisfaction)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", se = F)\n\n# Conditioning on student  \nberk_cond &lt;- ggplot(customers, aes(x = follow_ups, y =satisfaction,color = subscription, alpha = subscription))+\n   geom_point() +\n   stat_smooth(method = \"lm\", se = F)+\n  \n  \n   scale_alpha_manual(values = c(\"Subscription\" = 1, \"no_Subscription\" = 0.2)) +theme(legend.position =      \"right\")\n\n# Plot both\nberk_not_cond\n\n#&gt; `geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\nberk_cond\n\n#&gt; `geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "content/01_journal/06_rct.html",
    "href": "content/01_journal/06_rct.html",
    "title": "Randomized Controlled Trials",
    "section": "",
    "text": "AB_testing &lt;-readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/abtest_online.rds\")\n\n\nlibrary(\"ggplot2\")\ncompare_purchase &lt;- ggplot(AB_testing, aes(x = chatbot, y = purchase_amount, color = as.factor(chatbot))) +\n  stat_summary(geom = \"errorbar\", \n               width = .5,\n               fun.data = \"mean_se\", \n               fun.args = list(mult=1.96),\n               show.legend = F) +\nlabs(x = \"chatbot\", y = \"purchase_amount\", title = \"Difference in purchace_amount\")\n\ncompare_purchase\n\n\n\n\n\n\n\n\n\nlibrary(\"ggplot2\")\ncompare_mobile &lt;- ggplot(AB_testing, aes(x = chatbot, y = mobile_device, color = as.factor(chatbot))) +\n  stat_summary(geom = \"errorbar\", \n               width = .5,\n               fun.data = \"mean_se\", \n               fun.args = list(mult=1.96),\n               show.legend = F) +\nlabs(x = \"chatbot\", y = \"mobile_device\", title = \"Difference in mobile_device\")\n\ncompare_mobile\n\n\n\n\n\n\n\n\n\nlibrary(\"ggplot2\")\ncompare_visits &lt;- ggplot(AB_testing, aes(x = chatbot, y = previous_visit, color = as.factor(chatbot))) +\n  stat_summary(geom = \"errorbar\", \n               width = .5,\n               fun.data = \"mean_se\", \n               fun.args = list(mult=1.96),\n               show.legend = F) +\nlabs(x = \"chatbot\", y = \"previous_visit\", title = \"Difference in previous_visit\")\n\ncompare_visits\n\n\n\n\n\n\n\n\n\nlm_all &lt;- lm(purchase_amount ~ chatbot, data = AB_testing)\nsummary(lm_all)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = purchase_amount ~ chatbot, data = AB_testing)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -16.702 -14.478  -9.626  13.922  64.648 \n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)  16.7017     0.8374  19.944  &lt; 2e-16 ***\n#&gt; chatbotTRUE  -7.0756     1.1796  -5.998 2.79e-09 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 18.65 on 998 degrees of freedom\n#&gt; Multiple R-squared:  0.0348, Adjusted R-squared:  0.03383 \n#&gt; F-statistic: 35.98 on 1 and 998 DF,  p-value: 2.787e-09\n\n\n\nlm_inter &lt;- lm(purchase_amount ~ chatbot*mobile_device, data = AB_testing)\nsummary(lm_inter)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = purchase_amount ~ chatbot * mobile_device, data = AB_testing)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt; -16.98 -14.54  -9.95  14.13  65.24 \n#&gt; \n#&gt; Coefficients:\n#&gt;                               Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)                    16.9797     1.0152  16.725   &lt;2e-16 ***\n#&gt; chatbotTRUE                    -7.0301     1.4284  -4.922    1e-06 ***\n#&gt; mobile_deviceTRUE              -0.8727     1.7987  -0.485    0.628    \n#&gt; chatbotTRUE:mobile_deviceTRUE  -0.1526     2.5369  -0.060    0.952    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 18.66 on 996 degrees of freedom\n#&gt; Multiple R-squared:  0.03534,    Adjusted R-squared:  0.03244 \n#&gt; F-statistic: 12.16 on 3 and 996 DF,  p-value: 8.034e-08\n\n\n\nlm_logistic &lt;- glm(formula= purchase ~ chatbot, family=binomial(link='logit'), data= AB_testing)\nsummary(lm_logistic)\n\n#&gt; \n#&gt; Call:\n#&gt; glm(formula = purchase ~ chatbot, family = binomial(link = \"logit\"), \n#&gt;     data = AB_testing)\n#&gt; \n#&gt; Coefficients:\n#&gt;             Estimate Std. Error z value Pr(&gt;|z|)    \n#&gt; (Intercept) -0.01613    0.08981  -0.180    0.857    \n#&gt; chatbotTRUE -0.98939    0.13484  -7.337 2.18e-13 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; (Dispersion parameter for binomial family taken to be 1)\n#&gt; \n#&gt;     Null deviance: 1329.1  on 999  degrees of freedom\n#&gt; Residual deviance: 1273.3  on 998  degrees of freedom\n#&gt; AIC: 1277.3\n#&gt; \n#&gt; Number of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "content/01_journal/08_did.html",
    "href": "content/01_journal/08_did.html",
    "title": "Difference-in-Differences",
    "section": "",
    "text": "hospitals &lt;-readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/hospdd.rds\")\n\n\nlibrary(dplyr)\n\n#&gt; \n#&gt; Attaching package: 'dplyr'\n\n\n#&gt; The following objects are masked from 'package:stats':\n#&gt; \n#&gt;     filter, lag\n\n\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     intersect, setdiff, setequal, union\n\nm &lt;- 6\n\ndf_B_zoom_in  &lt;- hospitals %&gt;% filter(month %in% (m/2):(m/2+1))\n\nbefore_treatment &lt;- df_B_zoom_in %&gt;%\n  filter(procedure == 0) %&gt;% \n  pull(satis)\nafter_treatment &lt;- df_B_zoom_in %&gt;%\n  filter(procedure == 1) %&gt;% \n  pull(satis)\n\n\nestimantion &lt;- after_treatment - before_treatment\n\n#&gt; Warning in after_treatment - before_treatment: longer object length is not a\n#&gt; multiple of shorter object length\n\nestimantion\n\n#&gt;    [1] -0.315449715  1.299536705 -0.884149313  1.500129223  1.869737864\n#&gt;    [6] -0.293085098  1.125676394  1.212326050  0.613820076 -0.193768024\n#&gt;   [11] -0.791080236  1.398062706  1.385328054  2.538437963 -0.853688478\n#&gt;   [16]  2.046282291  0.085299969  0.299661160  0.948502779  1.192175388\n#&gt;   [21]  0.181367874 -0.417596817  1.683727980  0.563450575  3.249882936\n#&gt;   [26]  1.653230906  1.891631603  1.712684393  1.497362852  1.743455648\n#&gt;   [31]  0.116402864  0.091464043  1.348269701 -1.076586485  1.004178524\n#&gt;   [36]  1.535046577  1.088540316 -0.555417776  0.771288395  1.348824739\n#&gt;   [41] -0.021127701 -0.308188677  0.937938213  0.074115276  3.132002115\n#&gt;   [46]  0.944365978  1.809023142 -0.710037947  0.613343716  0.292735100\n#&gt;   [51]  1.964648962  1.166994810  0.698906422 -0.239306450  0.362215996\n#&gt;   [56]  0.773688078  1.907552719  0.471146107  0.323688984  0.355654478\n#&gt;   [61] -1.222762346  0.885719776  0.230246067  1.545732737  1.553414822\n#&gt;   [66]  1.256060839  0.208397865 -0.007874012 -1.121561050  1.887672663\n#&gt;   [71]  0.827511311 -0.281815052  0.236843824 -0.283309698  0.466926098\n#&gt;   [76]  0.809800148 -0.514753819  1.313444853 -0.038959026  0.645752430\n#&gt;   [81]  1.438066483 -0.349483252  0.658799171  0.186749458  2.377972841\n#&gt;   [86] -1.525414705  1.264875650  0.902463436  0.273288012  0.830927849\n#&gt;   [91]  1.434051514  1.669362783 -0.284219742  1.357926369  1.097558498\n#&gt;   [96]  0.374639273  1.657609224  1.321248293  1.478396893  1.741798401\n#&gt;  [101]  0.281118393  0.128223419  1.737837076 -0.316294670  1.529306650\n#&gt;  [106]  0.771626711  0.363863468  0.329281569 -0.504226446  0.281188965\n#&gt;  [111]  2.254189014  1.638655186  1.331731796  3.164723873  0.397212029\n#&gt;  [116]  0.694025040  1.201647520  0.971542835  2.312654257  3.307088137\n#&gt;  [121] -0.323675632  0.750517368  2.037002563  2.188185453  1.808368206\n#&gt;  [126]  1.088982105 -1.257037640  0.048364162  1.499907494 -1.146014214\n#&gt;  [131]  0.713353157  1.371375799  2.135615587  1.149628878  2.212536812\n#&gt;  [136]  1.150541306 -0.433894157  1.521252871  0.325880527  1.952506065\n#&gt;  [141]  3.085483313 -0.593020916 -1.220615864  4.287295818 -0.966208935\n#&gt;  [146]  2.833467722  1.993118286  1.498525620  0.706498146  2.452130795\n#&gt;  [151]  0.674424171 -0.503988266 -3.077230930  1.971416473  0.512272358\n#&gt;  [156]  0.231430054 -0.498832941  0.694299221  1.622939587  1.737902164\n#&gt;  [161]  0.929311752 -1.899569988  1.373820305  1.728990555  2.492556095\n#&gt;  [166]  1.995957851 -3.165858746  0.906919718  1.319556236  0.559546947\n#&gt;  [171]  0.893175125  1.315505743  1.100995779  1.150727034 -0.046375751\n#&gt;  [176]  0.914356947 -0.032549381 -0.149060488 -0.167868853  1.213775635\n#&gt;  [181]  1.688281059  0.617511272  0.960798025 -0.179037333 -1.494659424\n#&gt;  [186]  1.246259928  1.738863707  2.036473036  0.805042267 -0.362015128\n#&gt;  [191]  1.148772597  1.014576197  0.342051744 -0.156451583  0.355853319\n#&gt;  [196]  1.188004255  1.388466358 -0.983644962  1.586015701  2.485412240\n#&gt;  [201]  0.588965535  1.463581800  0.887745142  1.239467859  2.356431127\n#&gt;  [206]  1.332749009 -0.260424137  1.938199759  0.161897659 -0.351632118\n#&gt;  [211]  2.178422451  1.911721230  1.173290253  1.776584148  1.884108782\n#&gt;  [216]  1.141990185  2.193962097  2.145767212 -1.673783302 -0.361024380\n#&gt;  [221] -0.388011932  3.023478270 -0.011457443  1.798132420  1.917389631\n#&gt;  [226]  0.649784565  2.833579063 -0.165977478 -1.554479122 -0.097710609\n#&gt;  [231]  0.915875435  1.026592255  0.517412424  1.021289110  2.100627184\n#&gt;  [236]  1.585800886  0.303148746 -0.913909435  0.597178698  1.222954512\n#&gt;  [241]  0.005819798  1.112046719  1.171705127  1.929225922  0.609632969\n#&gt;  [246]  1.024862051  0.641946316  0.940866947  0.284552097  0.066679478\n#&gt;  [251]  2.351885080 -0.188488007  1.702890396 -0.347149134  0.174852610\n#&gt;  [256]  0.824086428  0.617802143 -1.135791063  0.012340307  0.383370161\n#&gt;  [261]  0.850110531  1.484829664 -0.298039436  1.000911236 -0.349364758\n#&gt;  [266]  0.168148994  1.548576117  1.264286280 -1.079489946 -0.019533157\n#&gt;  [271]  1.450818300  1.145225048  0.234566689 -0.072313070  1.578292847\n#&gt;  [276] -0.073097944 -0.269150496  1.927713156  1.570545912 -0.739197016\n#&gt;  [281]  1.909323931  0.461433172  0.892130136  0.369191408  1.671504498\n#&gt;  [286] -0.140026093 -0.529947758  0.523756027  2.064542055  1.949265480\n#&gt;  [291] -1.486405611 -0.403394938 -0.051865339  0.400870323  2.185388088\n#&gt;  [296]  1.554218769  1.124099493  0.401142359  0.705388784  1.286412716\n#&gt;  [301]  0.291378021  2.171771526  0.971130133 -0.587829113  0.295990467\n#&gt;  [306] -0.279877663 -0.070693493 -1.159914494  3.063908815  0.957179070\n#&gt;  [311]  1.479082108 -1.007432938  2.172409296  2.428844213  1.601987839\n#&gt;  [316]  1.470010519  1.161171198  3.006365299  0.660548687  0.579189301\n#&gt;  [321]  0.250371218  1.674424052  0.153103828  1.217164516  1.469353437\n#&gt;  [326]  1.249334097  0.810487986  2.131393433  0.406358719  0.906988621\n#&gt;  [331]  1.329844236  0.523454428 -0.565150738  0.255094528  1.115620136\n#&gt;  [336]  1.227788925  1.172604322 -1.312700272  3.350594759  2.795333624\n#&gt;  [341]  1.716922283 -0.094697475  1.430108547 -2.090410233  1.286711454\n#&gt;  [346]  3.573711395  0.438242435  1.522055149 -0.187909126  0.127054691\n#&gt;  [351]  2.821687460 -0.241081238  0.052975655 -1.156311989  0.767090559\n#&gt;  [356]  1.636072397  1.506569147  1.519878387  2.196840286  2.394764185\n#&gt;  [361] -1.190149069  1.697098494  1.298358679 -1.574706316  0.417051792\n#&gt;  [366]  1.841338873  0.821057796  0.789946556 -0.165407658  1.776290417\n#&gt;  [371]  0.712213516  2.402939558  0.871865749  1.219205141 -0.050954819\n#&gt;  [376]  1.051763773  1.166847467 -0.081561565  1.011838675 -0.614300966\n#&gt;  [381]  0.956748724 -0.416510582  0.006175518 -0.040085316  2.317101479\n#&gt;  [386] -0.566571236  2.040420532  2.270412922  1.529775858  2.594049811\n#&gt;  [391]  1.925105572  1.799927950  0.727998495 -0.680736542  1.589694738\n#&gt;  [396]  1.600863218  2.433244228  0.287100315  2.004493713  2.629562140\n#&gt;  [401]  0.721690893  0.891756058  2.018156052  1.102238417  1.648440361\n#&gt;  [406]  2.637292862  0.281079531  3.856836557  1.223526239  1.391678333\n#&gt;  [411]  1.979826689  1.563520432  2.199687004  2.051133871  2.199072123\n#&gt;  [416]  2.288119078  1.079531908  1.341654301  2.054011822  1.584993124\n#&gt;  [421] -0.274043083 -0.141079426  1.968245029  0.727712870  0.130934477\n#&gt;  [426]  1.825094461  0.031277180  1.982023478  1.373973846  2.453549623\n#&gt;  [431] -0.209215879  0.527746439  1.705461740  0.204903603  1.091893673\n#&gt;  [436]  1.344520807 -0.575991154  0.733980417  1.325246334  1.820637226\n#&gt;  [441]  1.714686155  1.105616093  1.080516815  0.480447292  2.506454945\n#&gt;  [446]  1.441162109  0.498556614  1.540922165  1.661215544  1.862895727\n#&gt;  [451]  1.347200871  1.335879207  1.851047039  1.789664745  0.507320642\n#&gt;  [456]  1.480168104 -0.528248549  2.178632259  1.337705851 -0.662544250\n#&gt;  [461]  1.469709635 -0.557287931  0.495661974 -0.634771585 -1.166303873\n#&gt;  [466] -0.737065315 -0.044401646  1.124538422 -0.568099737  0.414043903\n#&gt;  [471] -2.161597729 -0.150099754  0.306209326 -1.212759733 -0.401549339\n#&gt;  [476] -0.087231159 -0.055246830 -0.698523283 -1.365360260 -0.555354595\n#&gt;  [481] -0.147447824 -1.741464376 -0.274320602 -0.787563324 -0.421929359\n#&gt;  [486]  0.275219679 -1.428388357 -0.707499027  0.690805197 -1.171983719\n#&gt;  [491] -0.723019838 -1.031597376 -1.176456451  0.735891819  0.284052372\n#&gt;  [496]  1.209851742  0.814718246 -2.158960104  1.587279320  0.912839890\n#&gt;  [501]  0.706899166  0.147780418  1.286807060  0.571937084 -0.445512772\n#&gt;  [506]  2.949022532  1.256163597  0.740016460  0.547736645 -0.805008411\n#&gt;  [511] -0.609220028  2.704587221 -0.341621637 -0.299196959 -0.397341728\n#&gt;  [516]  0.495221138 -0.671893597  1.514357090  1.738401890 -0.998635292\n#&gt;  [521]  1.717049360  1.817136765  1.444923878  1.994763851  0.196650743\n#&gt;  [526]  0.534812212  5.689590931  1.700877905  0.669130802  2.300413132\n#&gt;  [531]  0.967439175 -0.053071976  2.004269600  1.955184937  1.547570705\n#&gt;  [536] -0.005698919  1.568858862  1.710948229  0.247580528 -0.502316713\n#&gt;  [541]  1.287134886  3.347903967  2.347282648  1.252043486 -0.384098053\n#&gt;  [546]  1.706622839  3.636492491  2.334623337  0.696292400  1.687506914\n#&gt;  [551] -0.074871063 -0.840330124 -0.335982800  0.842714787  2.030247450\n#&gt;  [556]  0.165161610  1.584097385 -1.660958290 -0.170042038 -0.272605896\n#&gt;  [561] -2.383310795 -2.062999249  0.559562922  1.630764961 -0.357398510\n#&gt;  [566]  0.686139345 -1.076616287  1.344718933  1.194967985  0.085643291\n#&gt;  [571]  1.740820169  0.800608158 -1.450009108 -0.340417147  0.137753487\n#&gt;  [576] -0.547314167 -1.899439573 -0.614443302  1.054159999 -0.522437096\n#&gt;  [581] -1.209429741  0.421365738  0.064001560  0.764563441  0.004678726\n#&gt;  [586]  1.377675772 -1.639706135  1.769391537 -0.162331820 -1.987913132\n#&gt;  [591]  0.413378239 -1.620987177  2.536621571  5.595646262  4.104108810\n#&gt;  [596]  0.881447315  4.565935373  3.303697586  3.402680397  5.840615153\n#&gt;  [601]  3.516964436  0.522926807  1.454001904  1.064660072  1.825180531\n#&gt;  [606]  2.438372374  2.722823143  0.825675964  1.204401016  1.458378077\n#&gt;  [611]  1.860519409  0.418552399  0.108955145  0.132366419  2.049864531\n#&gt;  [616]  0.143810749  0.434229136  0.896144867  0.769286156  0.260131359\n#&gt;  [621]  0.097973347  1.364679575  1.719101429 -0.230029106 -0.849372149\n#&gt;  [626] -0.518587351  1.112777710  2.561410308  1.406508923 -0.036832094\n#&gt;  [631]  0.882453442  1.175539017  0.654366493  2.200340986  1.993173361\n#&gt;  [636]  1.286631584 -0.492850304  0.215007305  0.486324549  0.961757660\n#&gt;  [641] -0.749213457  1.029750586 -1.091372252  1.577087164  0.439903736\n#&gt;  [646] -1.359060287  1.313319921  1.452615976  0.874623537  1.446375370\n#&gt;  [651]  0.205518484 -1.008133173 -0.199006796  0.612572193  0.194240093\n#&gt;  [656]  0.261148930  0.317479134 -0.996638775 -0.105605364 -0.046451330\n#&gt;  [661]  1.696367979  1.935828686  0.208133221  2.208395958  0.094011545\n#&gt;  [666]  0.727950811  0.800045967  2.408577919  1.128303766  1.274503469\n#&gt;  [671]  1.066899061  2.759150982  2.661695957  0.436716318  0.846122503\n#&gt;  [676]  0.676400423  2.751414537  2.839781523  2.013020515  2.193153620\n#&gt;  [681]  1.509642601  0.622818232  2.332860112  1.438122034  3.814961195\n#&gt;  [686]  0.415915489 -0.169039726  0.876349688  0.261461496 -0.018685579\n#&gt;  [691]  0.164962053  2.423821211  2.256323099  3.858898401  1.279884815\n#&gt;  [696]  1.718873024  1.521252155  1.201099634  1.073699474  1.418551922\n#&gt;  [701]  2.166522503 -0.838052034  0.960757732  0.309311867  0.364698648\n#&gt;  [706]  1.712027550  1.885179520  2.083593369  1.121785164  0.462164640\n#&gt;  [711]  0.312088966  1.071674109  0.727009535  3.374626637  1.090084076\n#&gt;  [716] -1.477141619  1.185431719  2.342498302  1.549015045  0.868916750\n#&gt;  [721] -1.123519659  2.067191124  0.793315887  4.916166186  4.008973837\n#&gt;  [726]  1.535359859  0.738234043  0.403369904  2.885926247  0.745479107\n#&gt;  [731]  2.320516109  0.485652208 -0.417429447  1.529455185  0.381024837\n#&gt;  [736]  2.604420185  0.164899826  0.294729948  0.720529079  1.227893114\n#&gt;  [741]  0.842630863  0.839163303 -1.008323193 -1.366950750  1.796657324\n#&gt;  [746]  0.232035637 -0.692947865  0.327655315  1.796037197  0.525989056\n#&gt;  [751]  2.230120897  0.502938986  1.592661858  1.493208885  1.338319778\n#&gt;  [756]  1.679190159  2.077246666 -0.412486792  0.530319929  0.755090952\n#&gt;  [761]  1.123872519  1.637313128  0.360177755  1.195305347  0.529323101\n#&gt;  [766] -1.599204302  0.477253914  0.257544518 -1.557695389  0.286575317\n#&gt;  [771]  1.219120026  0.347755909  1.553181648 -0.056693316  2.126889706\n#&gt;  [776]  0.417927742 -0.587284565  1.151399612  0.314148426  0.584548712\n#&gt;  [781] -1.934092283  1.937021017  0.832444429 -0.108137131 -0.061491966\n#&gt;  [786]  1.530616522 -0.108010769 -0.681156158  1.611611843  0.819520473\n#&gt;  [791]  3.145566702  1.045536518  1.104788780  1.469921350  1.196948767\n#&gt;  [796]  1.481780529  2.390903831  1.357200623  1.684313059  0.233471394\n#&gt;  [801]  2.545763850  1.905079365  1.716733456  1.448039055  1.144422770\n#&gt;  [806]  1.365231752  0.781222820  0.466736078  0.683932781  1.836866856\n#&gt;  [811]  1.806833267 -0.119943142  2.468771935 -0.093243122  0.043577433\n#&gt;  [816]  1.500632048  0.131148815  2.141165018  0.873621464 -0.600936413\n#&gt;  [821]  2.507562399  0.844465971  0.129336834  1.015788317  0.141079426\n#&gt;  [826] -0.372081518 -1.092914343  0.725967884  2.469634056  0.590521812\n#&gt;  [831]  0.440019131  0.904710531  1.373767614  1.082044125  0.257718563\n#&gt;  [836]  0.580694199  1.840351582 -0.282236576  0.053337097 -0.899893522\n#&gt;  [841]  0.076767445  1.311163902  0.483024120  2.251907349 -1.381861210\n#&gt;  [846]  0.010206223 -0.127021313 -1.551300764  1.107087135  1.037367344\n#&gt;  [851]  1.730343342  0.387798786 -0.125238895  1.373140097  0.431880951\n#&gt;  [856]  1.362954617  1.273996115  2.549588919  2.439750910  1.701315641\n#&gt;  [861]  0.078279734  0.751371861  0.779950142  1.814269304  1.406851053\n#&gt;  [866]  1.583564043  0.966760635 -0.780889034  1.386621237  0.576117516\n#&gt;  [871]  2.097600937  1.635101795  0.380573988  1.023302555  0.648245096\n#&gt;  [876]  1.451171160  2.244411707  1.584142923  1.492311716  4.104924798\n#&gt;  [881]  0.356900692  1.109477758  2.293449640  1.095192432  1.790740490\n#&gt;  [886]  2.159100533  2.622413158  1.394475698  2.664355516  3.030633926\n#&gt;  [891]  1.677424669  2.851954222  1.187249422  1.178417683  3.381131887\n#&gt;  [896]  0.373024702  0.341905355  1.850767136  2.318053722  1.597865582\n#&gt;  [901]  3.304473162  2.513397694  0.269387245  2.010415316  2.952905893\n#&gt;  [906]  2.381440401  2.983564377  1.310242653  2.741869092  7.154033184\n#&gt;  [911]  2.556323051  2.551041842  3.963633776  4.450266957  0.224664450\n#&gt;  [916]  3.947218657  2.407373428  2.304139614  0.569657087  2.140099525\n#&gt;  [921]  2.652099848  1.992505312  1.327877283  2.660793781  4.366463184\n#&gt;  [926]  2.665861368  2.324589729  1.447609186  3.482364297  2.997662783\n#&gt;  [931]  3.399864674  1.233814716  3.021224499  2.080748320  2.120021582\n#&gt;  [936]  0.254012585  0.491401672  2.654093266  0.403939724  2.155655384\n#&gt;  [941]  0.141862154 -0.406486511  1.820116878 -0.189079523 -1.172341585\n#&gt;  [946]  0.816645622  1.972314119  0.617171764  1.937613010 -1.493380785\n#&gt;  [951]  0.583184242  1.788836241  2.428879738  1.862263918  1.043223143\n#&gt;  [956] -1.797133207 -2.167638302 -0.163462639 -0.382318020 -1.360296249\n#&gt;  [961] -0.594294310 -0.143913746 -0.671961069 -1.464637280  1.716671824\n#&gt;  [966]  0.327442646 -2.823304415  0.021080971  0.141405582 -0.982335329\n#&gt;  [971]  1.668346167 -1.364421606 -2.395237446 -0.535866261 -0.581892014\n#&gt;  [976]  1.175280571  4.554435968  4.528855085  1.877086878  3.243818760\n#&gt;  [981]  2.705674887  4.183597803  4.672415972  2.773391724  0.302321196\n#&gt;  [986]  1.764667273  1.452475548  3.499282837  1.157371998  3.313699484\n#&gt;  [991]  2.539231777  1.948560715  1.213918686  2.713901997 -0.432430267\n#&gt;  [996]  0.766571999 -0.014039993  0.769865036  1.033684731 -0.553341389\n#&gt; [1001]  2.445288897  1.195823669  1.764932394  0.755318642  0.402092695\n#&gt; [1006]  1.631046534 -1.547204494 -0.405820608 -0.920469761  2.083446980\n#&gt; [1011]  0.217539310  0.700940609 -0.426567554  1.321609259  1.491336823\n#&gt; [1016]  0.387215376  2.865342617  1.820626736  0.164163351  1.999086022\n#&gt; [1021] -0.031761408  0.311101198 -0.257297039  0.028119326  0.518803358\n#&gt; [1026] -0.418860674  0.414271593  1.148096800 -0.727243662 -0.034265518\n#&gt; [1031] -0.658612728 -1.133702040  0.381001711 -1.076710939 -1.059190512\n#&gt; [1036]  0.427476168  0.643555641  0.669394255 -1.166999340 -2.828493118\n#&gt; [1041] -1.935495377 -2.156986237 -0.489537954  1.137606382 -1.602764606\n#&gt; [1046] -1.588870764 -1.256738663 -2.616485834 -1.002054214 -0.124054670\n#&gt; [1051] -1.758534908 -2.304410934 -0.993050098 -0.066662788 -0.093799591\n#&gt; [1056]  1.736482143 -3.454174519 -1.568377256 -1.134633780 -1.385351658\n#&gt; [1061]  0.566110134 -0.400896072 -0.394951820 -1.383665562 -3.000284433\n#&gt; [1066] -0.330025196 -3.252477884  1.714365482 -0.750742674 -2.896550179\n#&gt; [1071] -0.583167076 -1.210221529 -3.113115788 -2.301018715  0.222455025\n#&gt; [1076] -1.948030472  1.543220043 -1.442690372  0.428620338  1.099539280\n#&gt; [1081] -0.318915844 -1.052609205 -1.965786457 -0.127151489  0.482723713\n#&gt; [1086]  0.416156530  0.564175367 -0.916686773  0.165995598  0.672042131\n#&gt; [1091]  1.132835150  1.055735350  0.856277943  0.706292391 -0.053384542\n#&gt; [1096]  0.732510328  1.475731850 -0.012093067  0.174203396  0.191501141\n#&gt; [1101]  2.430041790  2.037908077  1.221132278 -0.674509048  3.269634724\n#&gt; [1106]  3.854570866  3.439396620  2.720684767  4.098157287  1.255595922\n#&gt; [1111]  1.628854990  4.416050673  1.830541134  4.084842682  0.816334248\n#&gt; [1116]  2.357501984  3.230326891  1.298705578  4.108928680  2.338005066\n#&gt; [1121]  0.381544113  0.326264858  2.192775488  2.643614054  0.667037010\n#&gt; [1126]  1.349623442 -0.627154827  2.484896421  2.199705362 -0.670605421\n#&gt; [1131]  1.103268385  2.170121908  2.158243179  3.738822699  1.022433996\n#&gt; [1136]  1.330674171  2.632793665  2.011376143  0.682743073  0.977347136\n#&gt; [1141]  0.479821920  0.520748377  1.209348202  0.772485733  0.201231480\n#&gt; [1146]  0.371350288  1.845039606 -0.090177774  1.340840101  0.019270182\n#&gt; [1151]  1.189228058 -1.352795362  0.262785912  1.330384016 -0.115243912\n#&gt; [1156]  1.877280235 -0.687032461  0.280699253  0.509794235 -0.064450026\n#&gt; [1161]  1.780748129  0.496933222  0.927035332 -0.900436878  0.672331810\n#&gt; [1166]  1.762700319  0.959691525  0.563981056  1.404581547  0.570547819\n#&gt; [1171] -0.397753716  1.282164812  0.446015358  2.194873571  0.832991362\n#&gt; [1176]  1.358559847  2.281852007  0.050209999  0.771106720  1.382063627\n#&gt; [1181]  1.672060013  1.829513788 -0.306031942  1.630424261  1.490902424\n#&gt; [1186]  3.166868448  0.006295204 -0.431511402 -0.298625946 -0.942190647\n#&gt; [1191] -1.137364864  0.465762615  1.535306454  0.912685871  0.374962807\n#&gt; [1196]  1.681980133  0.836333752 -0.533027172 -0.129943848  0.511593819\n#&gt; [1201] -1.328550339 -0.029485226 -2.513959408  1.714839697 -0.345716953\n#&gt; [1206]  1.732943058  0.855917931  0.825502157 -0.996768236  0.102450132\n#&gt; [1211] -0.364974022  1.015470028  0.106356144  0.267461777  0.653493881\n#&gt; [1216] -0.336047649  0.811546564 -1.054966450  0.588847160  0.209961414\n#&gt; [1221] -1.291076660 -0.652160168 -3.141837835 -0.850692272  1.479526520\n#&gt; [1226] -0.221118927  0.534518719 -1.705876827  1.188240051 -0.242054939\n#&gt; [1231] -2.330222845  1.372957230  1.287608862  2.062125683  0.049814463\n#&gt; [1236]  1.277500868  1.187866926 -0.668911457  0.089684248  1.260798454\n#&gt; [1241]  1.487664461  1.641637802  1.404276848  0.218305111  1.154543638\n#&gt; [1246]  0.087451696  1.110496044  0.797483444  0.637017965  1.305268288\n#&gt; [1251]  1.123697996  1.247215986 -1.122306108  2.215245247  1.804283142\n#&gt; [1256]  1.093728065  0.176146507  0.443504572  0.701127291  0.078670979\n#&gt; [1261]  2.137139320  2.952159882  2.615960121  0.331260920  0.952577353\n#&gt; [1266]  1.783647776  2.537926435  1.449194193  2.886781931  1.630543709\n#&gt; [1271]  1.262238264  3.631227255  3.122833252  1.189652920  3.408369303\n#&gt; [1276]  1.516497135  0.357230186  2.164054871 -0.195703983  0.995441437\n#&gt; [1281]  2.180526972  0.917286396  1.489549875  1.405025959  1.172881126\n#&gt; [1286] -2.887737036  0.968098879  1.684478283  1.215747356  1.602714062\n#&gt; [1291] -0.380866051 -0.434771538  4.878833771  1.679676294  1.907427311\n#&gt; [1296]  3.164828777  1.093102932 -1.511332035  3.024335623  1.810388565\n#&gt; [1301]  1.203933001 -0.587944031  2.357712269  0.326479435 -0.380589485\n#&gt; [1306] -1.364504099  0.878792763  3.723371267  2.460825682  0.715671539\n#&gt; [1311]  0.530394077  3.276166439  3.533019066  4.767277718  1.435642719\n#&gt; [1316]  3.145487070  2.976076961  2.748236418  0.734086752  1.513363838\n#&gt; [1321]  3.001643419  1.956218004  0.985762119 -0.008550167  1.911664248\n#&gt; [1326]  1.345364332  0.067971945  0.424128532  0.924267769  3.295979023\n#&gt; [1331]  1.477079391  1.797124386 -0.252779484  1.014245987  2.676330566\n#&gt; [1336]  2.618510723  3.076347113  0.452979565 -1.749802589  0.188788414\n#&gt; [1341]  1.390986681 -0.506369591 -1.481059551 -0.238521576 -0.039191723\n#&gt; [1346] -0.012357473 -1.418126106  0.698109627  1.168745041 -1.410419941\n#&gt; [1351]  0.080903292 -0.896151543 -1.754162788  0.455230474 -1.076128721\n#&gt; [1356] -2.512862921 -0.116833210 -0.781284094  2.565343380  3.927015305\n#&gt; [1361]  3.847454071  1.363612413  3.212191820  3.314215899  2.973589897\n#&gt; [1366]  4.408134699  2.624398947  1.106818914  1.723387003  0.944180489\n#&gt; [1371]  3.867827892  1.593979359  2.041044474  2.482742071  1.554656744\n#&gt; [1376]  2.020905733  4.620843768  1.738583565  1.292636395  0.385258198\n#&gt; [1381]  2.179226160  1.690823793  0.696911335  3.055751085  2.020761490\n#&gt; [1386]  1.072886944 -0.172123194  1.274913788  2.207753897  0.734395027\n#&gt; [1391]  1.002752304 -0.409518480  3.241969585  1.151779652  1.032560349\n#&gt; [1396]  1.115803719  0.212982416  2.253060341 -0.245871544  1.182489872\n#&gt; [1401]  0.433480978  0.564710617  0.036518574  0.031817913  1.040219545\n#&gt; [1406]  1.093253374 -1.127276421 -0.433740139  0.370252609  1.510663986\n#&gt; [1411]  1.587633848 -0.042561054  2.587446213  0.187254667  0.827880621\n#&gt; [1416]  1.059102774  1.117165804 -0.643001556 -0.602621794  2.235398054\n#&gt; [1421]  1.624117851  1.183472872  0.960382223  1.041858435  0.518370628\n#&gt; [1426]  0.608139753  1.828144789  1.201090574  1.666439533  1.171121359\n#&gt; [1431] -1.123709917  1.079330921  0.493664503  2.093574286  0.418572426\n#&gt; [1436]  1.814987183  1.432405233  3.046072960  2.222794056 -1.031122208\n#&gt; [1441] -0.473801851 -0.189027786  1.204259157  2.819651127  0.726147175\n#&gt; [1446]  1.148389816  0.277231693  0.775491238  2.073134899  0.489536762\n#&gt; [1451]  1.684482098 -0.638118744 -0.293454170  0.102545738 -0.634989023\n#&gt; [1456]  0.363803387 -0.292335033  2.876810551  2.799094200\n#&gt; attr(,\"label\")\n#&gt; [1] \"Patient satisfaction score\"\n#&gt; attr(,\"format.stata\")\n#&gt; [1] \"%9.0g\"\n\n\n\nsummary(lm(satis ~ month + hospital , data = hospitals)) \n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = satis ~ month + hospital, data = hospitals)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -3.3831 -0.6724 -0.0838  0.5778  5.7881 \n#&gt; \n#&gt; Coefficients:\n#&gt;               Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)  3.7597212  0.0308145  122.01   &lt;2e-16 ***\n#&gt; month        0.0720728  0.0055957   12.88   &lt;2e-16 ***\n#&gt; hospital    -0.0175982  0.0008732  -20.16   &lt;2e-16 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 1.017 on 7365 degrees of freedom\n#&gt; Multiple R-squared:  0.07208,    Adjusted R-squared:  0.07183 \n#&gt; F-statistic: 286.1 on 2 and 7365 DF,  p-value: &lt; 2.2e-16\n\n\n\nsummary(lm(satis ~ as.factor(month) + as.factor(hospital) , data = hospitals)) \n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = satis ~ as.factor(month) + as.factor(hospital), \n#&gt;     data = hospitals)\n#&gt; \n#&gt; Residuals:\n#&gt;     Min      1Q  Median      3Q     Max \n#&gt; -3.4357 -0.4930 -0.0120  0.4755  4.5398 \n#&gt; \n#&gt; Coefficients:\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)            3.419332   0.057597  59.367  &lt; 2e-16 ***\n#&gt; as.factor(month)2     -0.009608   0.030411  -0.316 0.752069    \n#&gt; as.factor(month)3      0.021969   0.030411   0.722 0.470083    \n#&gt; as.factor(month)4      0.349354   0.030411  11.488  &lt; 2e-16 ***\n#&gt; as.factor(month)5      0.343235   0.030411  11.286  &lt; 2e-16 ***\n#&gt; as.factor(month)6      0.348800   0.030411  11.469  &lt; 2e-16 ***\n#&gt; as.factor(month)7      0.341444   0.030411  11.228  &lt; 2e-16 ***\n#&gt; as.factor(hospital)2   0.408566   0.080413   5.081 3.85e-07 ***\n#&gt; as.factor(hospital)3   0.533625   0.082596   6.461 1.11e-10 ***\n#&gt; as.factor(hospital)4   0.227510   0.076977   2.956 0.003131 ** \n#&gt; as.factor(hospital)5  -0.145353   0.076977  -1.888 0.059030 .  \n#&gt; as.factor(hospital)6   0.447863   0.076977   5.818 6.20e-09 ***\n#&gt; as.factor(hospital)7   1.404416   0.074390  18.879  &lt; 2e-16 ***\n#&gt; as.factor(hospital)8   0.071876   0.079452   0.905 0.365685    \n#&gt; as.factor(hospital)9  -1.518515   0.081457 -18.642  &lt; 2e-16 ***\n#&gt; as.factor(hospital)10  1.682845   0.080413  20.927  &lt; 2e-16 ***\n#&gt; as.factor(hospital)11  0.220965   0.079452   2.781 0.005431 ** \n#&gt; as.factor(hospital)12 -0.095303   0.081457  -1.170 0.242047    \n#&gt; as.factor(hospital)13  0.495593   0.078564   6.308 2.99e-10 ***\n#&gt; as.factor(hospital)14  0.233043   0.082596   2.821 0.004793 ** \n#&gt; as.factor(hospital)15 -0.144494   0.082596  -1.749 0.080263 .  \n#&gt; as.factor(hospital)16  1.414268   0.080413  17.588  &lt; 2e-16 ***\n#&gt; as.factor(hospital)17  0.423543   0.083843   5.052 4.49e-07 ***\n#&gt; as.factor(hospital)18  0.153276   0.097668   1.569 0.116609    \n#&gt; as.factor(hospital)19 -1.169296   0.082596 -14.157  &lt; 2e-16 ***\n#&gt; as.factor(hospital)20 -0.376607   0.080413  -4.683 2.87e-06 ***\n#&gt; as.factor(hospital)21  0.770343   0.085215   9.040  &lt; 2e-16 ***\n#&gt; as.factor(hospital)22  0.375321   0.083843   4.476 7.70e-06 ***\n#&gt; as.factor(hospital)23  0.277726   0.082596   3.362 0.000776 ***\n#&gt; as.factor(hospital)24 -0.732120   0.088421  -8.280  &lt; 2e-16 ***\n#&gt; as.factor(hospital)25  0.222480   0.094875   2.345 0.019055 *  \n#&gt; as.factor(hospital)26 -0.209747   0.080413  -2.608 0.009116 ** \n#&gt; as.factor(hospital)27 -0.822648   0.077742 -10.582  &lt; 2e-16 ***\n#&gt; as.factor(hospital)28  0.288001   0.085215   3.380 0.000729 ***\n#&gt; as.factor(hospital)29 -0.175443   0.081457  -2.154 0.031288 *  \n#&gt; as.factor(hospital)30 -0.591916   0.097668  -6.060 1.42e-09 ***\n#&gt; as.factor(hospital)31  0.088091   0.080413   1.095 0.273344    \n#&gt; as.factor(hospital)32 -0.747340   0.081457  -9.175  &lt; 2e-16 ***\n#&gt; as.factor(hospital)33 -0.877969   0.080413 -10.918  &lt; 2e-16 ***\n#&gt; as.factor(hospital)34 -0.424406   0.075599  -5.614 2.05e-08 ***\n#&gt; as.factor(hospital)35 -0.069883   0.077742  -0.899 0.368729    \n#&gt; as.factor(hospital)36  1.714149   0.078564  21.818  &lt; 2e-16 ***\n#&gt; as.factor(hospital)37 -0.283590   0.094875  -2.989 0.002807 ** \n#&gt; as.factor(hospital)38 -0.510800   0.079452  -6.429 1.36e-10 ***\n#&gt; as.factor(hospital)39 -0.447491   0.083843  -5.337 9.72e-08 ***\n#&gt; as.factor(hospital)40  0.697539   0.079452   8.779  &lt; 2e-16 ***\n#&gt; as.factor(hospital)41 -0.573729   0.077742  -7.380 1.76e-13 ***\n#&gt; as.factor(hospital)42  0.457143   0.086733   5.271 1.40e-07 ***\n#&gt; as.factor(hospital)43 -1.196426   0.082596 -14.485  &lt; 2e-16 ***\n#&gt; as.factor(hospital)44 -0.389582   0.092446  -4.214 2.54e-05 ***\n#&gt; as.factor(hospital)45 -0.637743   0.077742  -8.203 2.74e-16 ***\n#&gt; as.factor(hospital)46 -0.345502   0.083843  -4.121 3.82e-05 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 0.7536 on 7316 degrees of freedom\n#&gt; Multiple R-squared:  0.4941, Adjusted R-squared:  0.4905 \n#&gt; F-statistic: 140.1 on 51 and 7316 DF,  p-value: &lt; 2.2e-16\n\ncat(\"When we used as.factor the output was a regressor for each month and and for each hopital , it was more detailed. But when we used th lm without it gave a general relation for all the months and hospitals not specified.\")\n\n#&gt; When we used as.factor the output was a regressor for each month and and for each hopital , it was more detailed. But when we used th lm without it gave a general relation for all the months and hospitals not specified."
  },
  {
    "objectID": "content/01_journal/01_probability.html",
    "href": "content/01_journal/01_probability.html",
    "title": "Probability Theory",
    "section": "",
    "text": "Note\n\n\n\nYou can delete everything in here and start fresh.\nThis is a .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "content/01_journal/01_probability.html#header-2",
    "href": "content/01_journal/01_probability.html#header-2",
    "title": "Probability Theory",
    "section": "2.1 Header 2",
    "text": "2.1 Header 2\n\nHeader 3\n\nHeader 4\n\nHeader 5\n\nHeader 6"
  },
  {
    "objectID": "content/01_journal/03_regression.html",
    "href": "content/01_journal/03_regression.html",
    "title": "Regression and Statistical Inference",
    "section": "",
    "text": "x &lt;- readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/car_prices.rds\")\n\n\ndim(x)\n\n#&gt; [1] 181  22\n\n\n\nhead(x)\n\n\n\n  \n\n\nsummary(x)\n\n#&gt;   aspiration         doornumber          carbody           drivewheel       \n#&gt;  Length:181         Length:181         Length:181         Length:181        \n#&gt;  Class :character   Class :character   Class :character   Class :character  \n#&gt;  Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n#&gt;                                                                             \n#&gt;                                                                             \n#&gt;                                                                             \n#&gt;  enginelocation       wheelbase        carlength        carwidth    \n#&gt;  Length:181         Min.   : 86.60   Min.   :141.1   Min.   :60.30  \n#&gt;  Class :character   1st Qu.: 94.50   1st Qu.:166.3   1st Qu.:64.00  \n#&gt;  Mode  :character   Median : 96.50   Median :173.0   Median :65.40  \n#&gt;                     Mean   : 98.21   Mean   :173.3   Mean   :65.74  \n#&gt;                     3rd Qu.:100.40   3rd Qu.:180.2   3rd Qu.:66.50  \n#&gt;                     Max.   :120.90   Max.   :208.1   Max.   :72.30  \n#&gt;    carheight       curbweight    enginetype        cylindernumber    \n#&gt;  Min.   :47.80   Min.   :1488   Length:181         Length:181        \n#&gt;  1st Qu.:52.00   1st Qu.:2122   Class :character   Class :character  \n#&gt;  Median :53.70   Median :2410   Mode  :character   Mode  :character  \n#&gt;  Mean   :53.58   Mean   :2521                                        \n#&gt;  3rd Qu.:55.50   3rd Qu.:2910                                        \n#&gt;  Max.   :59.80   Max.   :4066                                        \n#&gt;    enginesize     fuelsystem          boreratio         stroke    \n#&gt;  Min.   : 61.0   Length:181         Min.   :2.540   Min.   :2.07  \n#&gt;  1st Qu.: 98.0   Class :character   1st Qu.:3.150   1st Qu.:3.08  \n#&gt;  Median :120.0   Mode  :character   Median :3.310   Median :3.23  \n#&gt;  Mean   :127.1                      Mean   :3.325   Mean   :3.23  \n#&gt;  3rd Qu.:141.0                      3rd Qu.:3.590   3rd Qu.:3.40  \n#&gt;  Max.   :326.0                      Max.   :3.940   Max.   :4.17  \n#&gt;  compressionratio   horsepower       peakrpm        citympg     \n#&gt;  Min.   : 7.000   Min.   : 48.0   Min.   :4200   Min.   :13.00  \n#&gt;  1st Qu.: 8.500   1st Qu.: 70.0   1st Qu.:4800   1st Qu.:19.00  \n#&gt;  Median : 9.000   Median : 95.0   Median :5200   Median :24.00  \n#&gt;  Mean   : 8.848   Mean   :106.2   Mean   :5182   Mean   :24.85  \n#&gt;  3rd Qu.: 9.400   3rd Qu.:116.0   3rd Qu.:5500   3rd Qu.:30.00  \n#&gt;  Max.   :11.500   Max.   :288.0   Max.   :6600   Max.   :49.00  \n#&gt;    highwaympg        price      \n#&gt;  Min.   :16.00   Min.   : 5118  \n#&gt;  1st Qu.:25.00   1st Qu.: 7609  \n#&gt;  Median :30.00   Median : 9980  \n#&gt;  Mean   :30.48   Mean   :12999  \n#&gt;  3rd Qu.:34.00   3rd Qu.:16430  \n#&gt;  Max.   :54.00   Max.   :45400\n\ncat(\"The data contains char variables and numbers as double so they are different types \")\n\n#&gt; The data contains char variables and numbers as double so they are different types\n\n\n\nlm_all &lt;- lm(price ~ ., data= x)\nsummary(lm_all)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ ., data = x)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients:\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\ncat(\"The factors that are relevant are: 1) Horsepower, 2) EngineSize, and3) Stroke\")\n\n#&gt; The factors that are relevant are: 1) Horsepower, 2) EngineSize, and3) Stroke\n\n\n\nlm_imp &lt;- lm(price ~ horsepower, data = x)\nsummary(lm_imp)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ horsepower, data = x)\n#&gt; \n#&gt; Residuals:\n#&gt;      Min       1Q   Median       3Q      Max \n#&gt; -11954.0  -1838.1   -397.9   1455.2  19407.6 \n#&gt; \n#&gt; Coefficients:\n#&gt;              Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept) -4725.266    915.485  -5.161 6.47e-07 ***\n#&gt; horsepower    166.944      8.057  20.721  &lt; 2e-16 ***\n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 4389 on 179 degrees of freedom\n#&gt; Multiple R-squared:  0.7058, Adjusted R-squared:  0.7041 \n#&gt; F-statistic: 429.4 on 1 and 179 DF,  p-value: &lt; 2.2e-16\n\nsprintf(\"Adjusted R^2: %.2f\", broom::glance(lm_imp)$adj.r.squared)\n\n#&gt; [1] \"Adjusted R^2: 0.70\"\n\n# AIC\nsprintf(\"AIC: %.2f\", AIC(lm_imp))\n\n#&gt; [1] \"AIC: 3553.66\"\n\ncat(\"I choose Horsepower and the datatype is double, if I increased the horse power the price will get higher as my estimate is 166.94 so the number of horsepower will be multiplied by this value.\")\n\n#&gt; I choose Horsepower and the datatype is double, if I increased the horse power the price will get higher as my estimate is 166.94 so the number of horsepower will be multiplied by this value.\n\ncat(\"\\n\")\ncat(\"It is statistically Significant.\")\n\n#&gt; It is statistically Significant.\n\n\n\nlibrary(dplyr)\n\n#&gt; \n#&gt; Attache Paket: 'dplyr'\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:stats':\n#&gt; \n#&gt;     filter, lag\n\n\n#&gt; Die folgenden Objekte sind maskiert von 'package:base':\n#&gt; \n#&gt;     intersect, setdiff, setequal, union\n\nx %&gt;% mutate(seat_heating = TRUE)\n\n\n\n  \n\n\n\n\nlm_ss &lt;- lm(price ~ ., data= x)\nsummary(lm_ss)\n\n#&gt; \n#&gt; Call:\n#&gt; lm(formula = price ~ ., data = x)\n#&gt; \n#&gt; Residuals:\n#&gt;    Min     1Q Median     3Q    Max \n#&gt;  -5662  -1120      0    798   9040 \n#&gt; \n#&gt; Coefficients:\n#&gt;                        Estimate Std. Error t value Pr(&gt;|t|)    \n#&gt; (Intercept)          -36269.965  15460.866  -2.346 0.020354 *  \n#&gt; aspirationturbo        1846.206   1041.391   1.773 0.078386 .  \n#&gt; doornumbertwo           242.523    571.929   0.424 0.672172    \n#&gt; carbodyhardtop        -3691.743   1424.825  -2.591 0.010561 *  \n#&gt; carbodyhatchback      -3344.335   1238.359  -2.701 0.007757 ** \n#&gt; carbodysedan          -2292.820   1356.014  -1.691 0.093043 .  \n#&gt; carbodywagon          -3427.921   1490.285  -2.300 0.022885 *  \n#&gt; drivewheelfwd          -504.564   1076.623  -0.469 0.640030    \n#&gt; drivewheelrwd           -15.446   1268.070  -0.012 0.990299    \n#&gt; enginelocationrear     6643.492   2572.275   2.583 0.010806 *  \n#&gt; wheelbase               -30.197     92.776  -0.325 0.745294    \n#&gt; carlength               -29.740     51.672  -0.576 0.565824    \n#&gt; carwidth                731.819    244.533   2.993 0.003258 ** \n#&gt; carheight               123.195    134.607   0.915 0.361617    \n#&gt; curbweight                2.612      1.781   1.467 0.144706    \n#&gt; enginetypedohcv       -8541.957   4749.685  -1.798 0.074219 .  \n#&gt; enginetypel             978.748   1786.384   0.548 0.584619    \n#&gt; enginetypeohc          3345.252    933.001   3.585 0.000461 ***\n#&gt; enginetypeohcf          972.919   1625.631   0.598 0.550462    \n#&gt; enginetypeohcv        -6222.322   1236.415  -5.033 1.43e-06 ***\n#&gt; cylindernumberfive   -11724.540   3019.192  -3.883 0.000157 ***\n#&gt; cylindernumberfour   -11549.326   3177.177  -3.635 0.000387 ***\n#&gt; cylindernumbersix     -7151.398   2247.230  -3.182 0.001793 ** \n#&gt; cylindernumberthree   -4318.929   4688.833  -0.921 0.358545    \n#&gt; cylindernumbertwelve -11122.209   4196.494  -2.650 0.008946 ** \n#&gt; enginesize              125.934     26.541   4.745 5.00e-06 ***\n#&gt; fuelsystem2bbl          177.136    883.615   0.200 0.841400    \n#&gt; fuelsystemmfi         -3041.018   2576.996  -1.180 0.239934    \n#&gt; fuelsystemmpfi          359.278   1001.529   0.359 0.720326    \n#&gt; fuelsystemspdi        -2543.890   1363.546  -1.866 0.064140 .  \n#&gt; fuelsystemspfi          514.766   2499.229   0.206 0.837107    \n#&gt; boreratio             -1306.740   1642.221  -0.796 0.427516    \n#&gt; stroke                -4527.137    922.732  -4.906 2.49e-06 ***\n#&gt; compressionratio       -737.901    555.960  -1.327 0.186539    \n#&gt; horsepower               10.293     22.709   0.453 0.651035    \n#&gt; peakrpm                   2.526      0.634   3.983 0.000108 ***\n#&gt; citympg                 -90.352    166.647  -0.542 0.588538    \n#&gt; highwaympg              154.858    167.148   0.926 0.355761    \n#&gt; ---\n#&gt; Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#&gt; \n#&gt; Residual standard error: 2189 on 143 degrees of freedom\n#&gt; Multiple R-squared:  0.9415, Adjusted R-squared:  0.9264 \n#&gt; F-statistic: 62.21 on 37 and 143 DF,  p-value: &lt; 2.2e-16\n\ncat(\"The seat heating has no coefficient as it has no effect on the total price because it is true for all the cases.\")\n\n#&gt; The seat heating has no coefficient as it has no effect on the total price because it is true for all the cases."
  },
  {
    "objectID": "content/01_journal/10_rdd.html",
    "href": "content/01_journal/10_rdd.html",
    "title": "Regression Discontinuity",
    "section": "",
    "text": "coupons &lt;-readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/coupon.rds\")\n\n\nlibrary(dplyr)\n\n#&gt; \n#&gt; Attaching package: 'dplyr'\n\n\n#&gt; The following objects are masked from 'package:stats':\n#&gt; \n#&gt;     filter, lag\n\n\n#&gt; The following objects are masked from 'package:base':\n#&gt; \n#&gt;     intersect, setdiff, setequal, union\n\nc0 &lt;- 60\n# Specify bandwidth\nbw &lt;- 5\n\nbwHalf &lt;- c0 + c(-bw/2, bw/2)\nbwDouble &lt;- c0 + c(-bw*2, bw*2)\n\n# Subsets below and above threshold in specified bandwidth\ndf_bwHalf_below &lt;- coupons %&gt;% filter(days_since_last &gt;= bwHalf[1] & days_since_last &lt; c0)\ndf_bwHalf_above &lt;- coupons %&gt;% filter(days_since_last &gt;= c0 & days_since_last &lt;= bwHalf[2])\n\n\ndf_bw_half &lt;- bind_rows(df_bwHalf_above, df_bwHalf_below)\ndim(df_bw_half)\n\n#&gt; [1] 181   4\n\ndf_bwDouble_below &lt;- coupons %&gt;% filter(days_since_last &gt;= bwDouble[1] & days_since_last &lt; c0)\ndf_bwDouble_above &lt;- coupons %&gt;% filter(days_since_last &gt;= c0 & days_since_last &lt;= bwDouble[2])\n\ndf_bw_double &lt;- bind_rows(df_bwDouble_above, df_bwDouble_below)\ndim(df_bw_double)\n\n#&gt; [1] 629   4\n\nmodel_bw_below &lt;- lm(purchase_after ~ days_since_last, df_bwHalf_below)\nmodel_bw_above &lt;- lm(purchase_after ~ days_since_last, df_bwHalf_above)\n\ny0Half &lt;- predict(model_bw_below, tibble(days_since_last = c0))\ny1Half &lt;- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate &lt;- y1Half - y0Half\nsprintf(\"LATE_Half_BW: %.2f\", late)\n\n#&gt; [1] \"LATE_Half_BW: 7.36\"\n\nmodel_bw_below &lt;- lm(purchase_after ~ days_since_last, df_bwDouble_below)\nmodel_bw_above &lt;- lm(purchase_after ~ days_since_last, df_bwDouble_above)\n\ny0Double &lt;- predict(model_bw_below, tibble(days_since_last = c0))\ny1Double &lt;- predict(model_bw_above, tibble(days_since_last = c0))\n\nlate &lt;- y1Double - y0Double\nsprintf(\"LATE_Double_BW: %.2f\", late)\n\n#&gt; [1] \"LATE_Double_BW: 9.51\"\n\n\n\nshipments &lt;-readRDS(\"C:/Users/ahmed/OneDrive/Dokumente/Causal_Data_Science_Data/shipping.rds\")\n\n\nlibrary(rddensity)\n#cut off\nc1 &lt;- 30\n\nrddd &lt;- rddensity(shipments$purchase_amount, c = c1)\n\nsummary(rddd)\n\n#&gt; \n#&gt; Manipulation testing using local polynomial density estimation.\n#&gt; \n#&gt; Number of obs =       6666\n#&gt; Model =               unrestricted\n#&gt; Kernel =              triangular\n#&gt; BW method =           estimated\n#&gt; VCE method =          jackknife\n#&gt; \n#&gt; c = 30                Left of c           Right of c          \n#&gt; Number of obs         3088                3578                \n#&gt; Eff. Number of obs    2221                1955                \n#&gt; Order est. (p)        2                   2                   \n#&gt; Order bias (q)        3                   3                   \n#&gt; BW est. (h)           22.909              20.394              \n#&gt; \n#&gt; Method                T                   P &gt; |T|             \n#&gt; Robust                5.9855              0\n\n\n#&gt; Warning in summary.CJMrddensity(rddd): There are repeated observations. Point\n#&gt; estimates and standard errors have been adjusted. Use option massPoints=FALSE\n#&gt; to suppress this feature.\n\n\n#&gt; \n#&gt; P-values of binomial tests (H0: p=0.5).\n#&gt; \n#&gt; Window Length / 2          &lt;c     &gt;=c    P&gt;|T|\n#&gt; 0.261                      20      26    0.4614\n#&gt; 0.522                      41      65    0.0250\n#&gt; 0.783                      62     107    0.0007\n#&gt; 1.043                      81     136    0.0002\n#&gt; 1.304                     100     169    0.0000\n#&gt; 1.565                     114     196    0.0000\n#&gt; 1.826                     132     227    0.0000\n#&gt; 2.087                     156     263    0.0000\n#&gt; 2.348                     173     298    0.0000\n#&gt; 2.609                     191     331    0.0000\n\nrdd_plot &lt;- rdplotdensity(rddd,shipments$purchase_amount, plotN = 100)\n\n\n\n\n\n\n\ncat(\"We can not use a cut-off of 30 euroes because as we can see here in the graph the intervals are not overlaping so there is a suspession of manipulation and we can not use RDD to obtain valid results with this cut-off. However if the cut-off is 60, they will overlap\")\n\n#&gt; We can not use a cut-off of 30 euroes because as we can see here in the graph the intervals are not overlaping so there is a suspession of manipulation and we can not use RDD to obtain valid results with this cut-off. However if the cut-off is 60, they will overlap"
  }
]